name: Release
on:
  push:
    branches:
      - releases
jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install ruff
        run: pip install ruff
      - name: Linting
        run: ruff check .
      - name: Formatting
        run: ruff format . --check
      - name: Install deps
        run: pip install -r requirements.txt
      - name: Checking
        run: pyright .
  tests:
    runs-on: ubuntu-latest
    needs:
      - code-quality
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install deps
        run: pip install -r requirements.txt
      - name: Testing
        run: pytest -v --durations=0 --cov --cov-report=xml
      - name: Codecov push
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  push-to-main:
    runs-on: ubuntu-latest
    needs: 
      - code-quality
      - tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Push to Main
        run: |
          git config --global user.name "kretoffer"
          git config --global user.email "20kretovartem000@gmail.com"
          git checkout main
          git merge releases
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
  release:
    runs-on: ubuntu-latest
    needs:
      - push-to-main
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Read release info
        id: release_info
        run: |
          VERSION=$(yq '.version' release.yml)
          TITLE=$(yq '.title' release.yml)
          DESCRIPTION=$(yq '.description' release.yml)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "title=$TITLE" >> $GITHUB_OUTPUT
          echo "description=$DESCRIPTION" >> $GITHUB_OUTPUT

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        uses: actions/create-release@latest
        with:
          tag_name: ${{ steps.release_info.outputs.version }}
          release_name: ${{ steps.release_info.outputs.title }}
          body: |
            ${{ steps.release_info.outputs.description }}
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.ACTIONS_GITHUB_TOKEN }}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: true
          tags: ${{ steps.release_info.outputs.version }}
          labels: ${{ steps.release_info.outputs.title }}

    
